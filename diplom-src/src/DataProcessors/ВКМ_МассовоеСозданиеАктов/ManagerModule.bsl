Функция СозданиеАктовВФоне(ДатаНачала, ДатаОкончания) Экспорт
	
	ДатаДокумента = ТекущаяДатаСеанса();
	
	// соберем все обслуживания для создания реализации услуг
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Клиент,
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор,
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.Дата,
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор.Организация КАК Организация
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачПериода, &КонПериода,,) КАК
	|		ВКМ_ВыполненныеКлиентуРаботыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Контрагент = ВКМ_ВыполненныеКлиентуРаботыОбороты.Клиент
	|		И РеализацияТоваровУслуг.Договор = ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор
	|		И РеализацияТоваровУслуг.Дата МЕЖДУ &НачПериодаДок И &КонПериодаДок";
	
	Запрос.УстановитьПараметр("НачПериода", ДатаНачала);
	Запрос.УстановитьПараметр("КонПериода", ДатаОкончания);		
	Запрос.УстановитьПараметр("НачПериодаДок", НачалоМесяца(ДатаДокумента));
	Запрос.УстановитьПараметр("КонПериодаДок", КонецМесяца(ДатаДокумента));	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	КоличествоАктов = РезультатЗапроса.Количество();
	СчтТекАкт = 0;
	
	РезультатФункции = Новый Массив;
	
	Для каждого СтрокаРезультата Из РезультатЗапроса Цикл
	    СчтТекАкт = СчтТекАкт + 1;	    
	    
		ТекАкт = Новый Структура;
		ТекАкт.Вставить("Контрагент", СтрокаРезультата.Клиент);
		ТекАкт.Вставить("Договор", СтрокаРезультата.Договор);
		Если ЗначениеЗаполнено(СтрокаРезультата.Реализация) Тогда
			ТекАкт.Вставить("Реализация", СтрокаРезультата.Реализация);
			ТекАкт.Вставить("Дата", СтрокаРезультата.Дата);
		Иначе
			// создаем новый документ
			ДокументРеализации = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			ДокументРеализации.Дата = ТекущаяДатаСеанса();
			ДокументРеализации.Организация = СтрокаРезультата.Организация;
			ДокументРеализации.Контрагент = СтрокаРезультата.Клиент;
			ДокументРеализации.Договор = СтрокаРезультата.Договор;
			ДокументРеализации.Заполнить(Неопределено);   // ОбработкаЗаполнения()
			// Автозаполнение	
			Если ДокументРеализации.ВыполнитьАвтозаполнение(ДатаНачала, ДатаОкончания) Тогда 					
				Если ДокументРеализации.ПроверитьЗаполнение() Тогда
				    ДокументРеализации.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					// сохраним ошибку в журнал
					ТекстПроверки = СтрШаблон("Контрагент %1, договор %2, проверка не пройдена",
					                           ДокументРеализации.Контрагент, ДокументРеализации.Договор);
					ВКМ_РаботаСЖурналом.ЗаписатьСообщениеВЖурнал(ТекстПроверки);														
				    ДокументРеализации.Записать(РежимЗаписиДокумента.Запись);
				КонецЕсли;								
				ТекАкт.Вставить("Реализация", ДокументРеализации.Ссылка);
				ТекАкт.Вставить("Дата", ДокументРеализации.Дата);
			КонецЕсли;
		КонецЕсли;
		РезультатФункции.Добавить(ТекАкт);

		ПроцентВыполнения = Окр(( СчтТекАкт / КоличествоАктов ) * 100, 0);
		ДлительныеОперации.СообщитьПрогресс(ПроцентВыполнения, "Создание актов");
	КонецЦикла;
	
	Возврат РезультатФункции;
	
КонецФункции