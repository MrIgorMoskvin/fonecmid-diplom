#Область ОбработчикиСобытий
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) 
	
	// добавим информацию по данным до момента проводки
	ДокументПервоначальный = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот, Специалист, Проведен");	
	
	Для каждого Элемент Из ДокументПервоначальный Цикл
		ДополнительныеСвойства.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)

    // определим данные договора
    ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора, ВКМ_Нормочас, ВКМ_ДатаНачала, ВКМ_ДатаОкончания");

	// проверки
	Если ДанныеДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		Возврат;
	КонецЕсли;
	
	// проверка на даты
	Если Дата < ДанныеДоговора.ВКМ_ДатаНачала Или
	     Дата > ДанныеДоговора.ВКМ_ДатаОкончания Тогда
	    Отказ = Истина; 	
	    ТекстОшибки = СтрШаблон("Дата документа не соответствует периоду действия договора (с %1 по %2)",
	                            Формат(ДанныеДоговора.ВКМ_ДатаНачала, "ДФ=dd.MM.yy;"), 
	                            Формат(ДанныеДоговора.ВКМ_ДатаОкончания, "ДФ=dd.MM.yy;"));
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Дата");     	
	КонецЕсли;
	
	// определение изменения для регистрации текста
	ЗарегистрироватьИзменения(ЭтотОбъект);
		 
	// заполнение регистра ВКМ_ВыполненныеКлиентуРаботы 
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Для Каждого ТекСтрокаВыполненныеРаботы из ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = Движение.КоличествоЧасов * ДанныеДоговора.ВКМ_Нормочас;
	КонецЦикла;

КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ЗарегистрироватьИзменения(Документ)
	
	Если Не ЗначениеЗаполнено(Документ.ДополнительныеСвойства.Проведен) Тогда
	    // если документ новый
		ТекстСпециалисту = СтрШаблон("Поступил заказ на обслуживание клиента %1 от %2. Назначен специалист %3 на дату %4 с %5 до %6",
		                             Документ.Номер, 
		                             Формат(Документ.Дата, "ДФ=dd.MM.yyyy;"),
		                             Формат(Документ.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"),
		                             Формат(Документ.ВремяНачалаРабот, "ДЛФ=T; ДП=-;"),
		                             Формат(Документ.ВремяОкончанияРабот, "ДЛФ=T; ДП=-;")); 
	Иначе		
		// если сделаны изменения
		ТекстИзмененияСпециалиста = "";
		ТекстИзмененияДаты = "";
		ТекстИзмененияВемени = "";
		ТекстИзменения = "";
		Если Документ.Специалист <> Документ.ДополнительныеСвойства.Специалист Тогда
			ТекстИзмененияСпециалиста = СтрШаблон("Назначен новый специалист %1", Документ.Специалист); 
		КонецЕсли;
		Если Документ.ДатаПроведенияРабот <> Документ.ДополнительныеСвойства.ДатаПроведенияРабот Тогда
			ТекстИзмененияДаты = СтрШаблон("Изменена дата проведения работ на %1", Формат(Документ.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;")); 
		КонецЕсли;	
		Если Документ.ВремяНачалаРабот <> Документ.ДополнительныеСвойства.ВремяНачалаРабот Или
		     Документ.ВремяОкончанияРабот <> Документ.ДополнительныеСвойства.ВремяОкончанияРабот Тогда
			ТекстИзмененияВемени = СтрШаблон("Изменено время проведения работ с %1 до %2", 
			                                      Формат(Документ.ВремяНачалаРабот, "ДЛФ=T; ДП=-;"),
					                              Формат(Документ.ВремяОкончанияРабот, "ДЛФ=T; ДП=-;")); 
		КонецЕсли;	
	
		ТекстИзменения = СтрШаблон("%1 %2 %3",
		                           ТекстИзмененияСпециалиста,
		                           ТекстИзмененияДаты,
		                           ТекстИзмененияВемени);
	    ТекстИзменения = СокрЛП(ТекстИзменения);	                           
		ТекстСпециалисту = СтрШаблон("Изменен заказ на обслуживание клиента %1 от %2. %3",
		                             Документ.Номер, 
		                             Формат(Документ.Дата, "ДФ=dd.MM.yyyy;"),
		                             ТекстИзменения); 
	КонецЕсли;	         
	Если Не ЗначениеЗаполнено(ТекстСпециалисту) Тогда
		// новый текст отправлять не надо
		Возврат;
	КонецЕсли;		                 
	
	// сохраним в справочник сообщений
	НовоеУведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	НовоеУведомление.Текст = ТекстСпециалисту;
	НовоеУведомление.ВремяОтправки = Дата(1,1,1,0,0,0);
	НовоеУведомление.Записать();
	
	// создадим регламентное задание 
	//ВКМ_РеглЗаданиеДляОтправкиСообщений.ВКМ_СоздатьРегламентноеЗадание();
	
КонецПроцедуры
#КонецОбласти



