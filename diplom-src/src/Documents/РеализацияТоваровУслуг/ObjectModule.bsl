
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
// >>> ВКМ_ перекрываем проверку заполнения реквизитов
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
//	ВКМ_РаботаСЖурналом.ЗаписатьСообщениеВЖурнал("Проверка запущена");	
//	Для Сч = 1 По ПроверяемыеРеквизиты.Количество() Цикл
//		ВКМ_РаботаСЖурналом.ЗаписатьСообщениеВЖурнал(СтрШаблон("%1 %2", Сч, ПроверяемыеРеквизиты[Сч-1]));
//	КонецЦикла;

	// Проверим заполненность реквизита "Основание"
	ОснованиеРевизит = ПроверяемыеРеквизиты.Найти("Основание");
	Если ЗначениеЗаполнено(ОснованиеРевизит) Тогда
		// определим данные договора
    	ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора");
		// проверки
		Если ДанныеДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
			ПроверяемыеРеквизиты.Удалить(ОснованиеРевизит);
			//ВКМ_РаботаСЖурналом.ЗаписатьСообщениеВЖурнал("Основание удалено");
		КонецЕсли;
	КонецЕсли;
    
КонецПроцедуры
// <<< ВКМ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

// >>> ВКМ_ автозаполнение документа
Функция ВыполнитьАвтозаполнение(ДатаНачала, ДатаОкончания) Экспорт
	
	ДокументСформирован = Ложь;
	
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	Если Не ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) Или
	     Не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
		ВызватьИсключение("Не заполнены константы для автозаполнения!");
	КонецЕсли;
	
	// формируем строку для абонентской платы
	СуммаАбонентскойПлаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_АбонентскаяПлата");
	
	// очистить, если уже что-то ввели
	Товары.Очистить();
	Услуги.Очистить();
	
	// формируем позиции
	НоваяСтрока = Услуги.Добавить();
	НоваяСтрока.Номенклатура = НоменклатураАбонентскаяПлата;
	НоваяСтрока.Количество = 1;
	НоваяСтрока.Цена = СуммаАбонентскойПлаты;
	НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
	
	// формируем итоговую строку для выполненнных работ из Движения.ВКМ_ВыполненныеКлиентуРаботы
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот КАК Количество,
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот КАК Сумма,
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Клиент,
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачПериод, &КонПериода,, Договор = &Договор
	|	И Клиент = &Клиент) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты";
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("НачПериод", ДатаНачала);
	Запрос.УстановитьПараметр("КонПериода", ДатаОкончания);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураРаботыСпециалиста;
		НоваяСтрока.Количество = Выборка.Количество;
		НоваяСтрока.Цена = Окр(Выборка.Сумма / Выборка.Количество, 2);
		НоваяСтрока.Сумма = Выборка.Сумма;	  
	КонецЦикла;	
	
	// формируем сумму заранее
	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
	ДокументСформирован = Истина;
	
	Возврат ДокументСформирован;
	
КонецФункции
// <<< ВКМ

#КонецОбласти

#КонецЕсли
